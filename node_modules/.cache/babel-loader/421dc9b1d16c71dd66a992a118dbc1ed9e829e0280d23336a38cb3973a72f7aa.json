{"ast":null,"code":"var _jsxFileName = \"/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/Content.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Nav from \"./components/Nav\";\nimport NoteContainer from \"./components/NoteContainer\";\nimport NoteEditor from \"./components/NoteEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nextId = 3;\nconst Content = () => {\n  _s();\n  const [showNav, setShowNav] = useState(false);\n  const [showEditor, setShowEditor] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [noteInputValue, setNoteInputValue] = useState(null);\n  const [showSave, setShowSave] = useState(false);\n  const [notes, setNotes] = useState([\n  // the array holding note information\n  {\n    id: 1,\n    title: \"sample title title sample\",\n    subtitle: \"sample also\",\n    class: \"gridSquare\"\n  }, {\n    id: 2,\n    title: \"sample2\",\n    subtitle: \"sample2 also and yes yes\",\n    class: \"gridSquare\"\n  }]);\n  const handleNewNote = () => {\n    console.log(\"new note\");\n    setNotes([{\n      id: nextId,\n      title: \"New note\",\n      subtitle: \"edit content\",\n      class: \"gridSquare\"\n    }, ...notes]);\n    // highlight the new note\n    setShowEditor(true); // show the editor\n    nextId += 1;\n    selectNote(nextId);\n  };\n  const handleDeleteNote = () => {\n    console.log(selectedId);\n    console.log(\"selecte note when delete is clicked\", selectedNote.id);\n    const newArray = notes.filter(note => {\n      return note.id !== selectedNote.id;\n    });\n    console.log(newArray);\n    setNotes(newArray);\n  };\n  const selectNote = noteId => {\n    // runs when a note is clicked\n    setShowNav(true);\n    setSelectedId(noteId); // highlight the note itself\n    console.log(\"notes in selectNote\", notes);\n    const noteToBeSelected = notes.find(note => note.id === noteId);\n    setSelectedNote(noteToBeSelected);\n  };\n  const handleSaveNote = () => {\n    console.log('save');\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      showNav: showNav,\n      setShowNav: setShowNav,\n      showEditor: showEditor,\n      setShowEditor: setShowEditor,\n      selectedId: selectedId,\n      setSelectedId: setSelectedId,\n      notes: notes,\n      setNotes: setNotes,\n      handleNewNote: handleNewNote,\n      handleDeleteNote: handleDeleteNote,\n      showSave: showSave,\n      setShowSave: setShowSave,\n      handleSaveNote: handleSaveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteEditor, {\n      showEditor: showEditor,\n      setShowEditor: setShowEditor,\n      selectedNote: selectedNote,\n      noteInputValue: noteInputValue,\n      setNoteInputValue: setNoteInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteContainer, {\n      setShowNav: setShowNav,\n      selectedId: selectedId,\n      setSelectedId: setSelectedId,\n      notes: notes,\n      setNotes: setNotes,\n      selectNote: selectNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"tOqhR4VgQ8LEZrHgUeO1O3m6F7M=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","Nav","NoteContainer","NoteEditor","jsxDEV","_jsxDEV","nextId","Content","_s","showNav","setShowNav","showEditor","setShowEditor","selectedId","setSelectedId","selectedNote","setSelectedNote","noteInputValue","setNoteInputValue","showSave","setShowSave","notes","setNotes","id","title","subtitle","class","handleNewNote","console","log","selectNote","handleDeleteNote","newArray","filter","note","noteId","noteToBeSelected","find","handleSaveNote","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/Content.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Nav from \"./components/Nav\";\nimport NoteContainer from \"./components/NoteContainer\";\nimport NoteEditor from \"./components/NoteEditor\";\n\nlet nextId = 3;\n\n\nconst Content = () => {\n  const [showNav, setShowNav] = useState(false);\n  const [showEditor, setShowEditor] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [noteInputValue, setNoteInputValue] = useState(null);\n  const [showSave, setShowSave] = useState(false);\n\n  const [notes, setNotes] = useState([\n    // the array holding note information\n    {\n      id: 1,\n      title: \"sample title title sample\",\n      subtitle: \"sample also\",\n      class: \"gridSquare\",\n    },\n    {\n      id: 2,\n      title: \"sample2\",\n      subtitle: \"sample2 also and yes yes\",\n      class: \"gridSquare\",\n    },\n  ]);\n\n  const handleNewNote = () => {\n    console.log(\"new note\");\n    \n    setNotes([\n      {\n        id: nextId,\n        title: \"New note\",\n        subtitle: \"edit content\",\n        class: \"gridSquare\",\n      },\n      ...notes,\n    ]);\n // highlight the new note\n    setShowEditor(true); // show the editor\n    nextId += 1;\n    selectNote(nextId);\n  };\n\n  const handleDeleteNote = () => {\n    console.log(selectedId);\n    console.log(\"selecte note when delete is clicked\", selectedNote.id);\n\n\n    const newArray = notes.filter(note => {\n      return note.id !== selectedNote.id\n    });\n\n    console.log(newArray);\n    setNotes(newArray);\n  };\n\n  const selectNote = (noteId) => {\n    // runs when a note is clicked\n    setShowNav(true);\n    setSelectedId(noteId); // highlight the note itself\n    console.log(\"notes in selectNote\", notes);\n    const noteToBeSelected = notes.find(note => note.id === noteId);\n\n    setSelectedNote(noteToBeSelected);\n  };\n\n  const handleSaveNote = () => {\n    console.log('save')\n  }\n\n\n\n\n\n  return (\n    <main>\n      <Nav\n        showNav={showNav}\n        setShowNav={setShowNav}\n        showEditor={showEditor}\n        setShowEditor={setShowEditor}\n        selectedId={selectedId}\n        setSelectedId={setSelectedId}\n        notes={notes}\n        setNotes={setNotes}\n        handleNewNote={handleNewNote}\n        handleDeleteNote={handleDeleteNote}\n        showSave={showSave}\n        setShowSave={setShowSave}\n        handleSaveNote={handleSaveNote}\n\n      />\n      <NoteEditor showEditor={showEditor} \n      setShowEditor={setShowEditor}  \n      selectedNote={selectedNote} \n      noteInputValue={noteInputValue}\n      setNoteInputValue={setNoteInputValue}\n       />\n      <NoteContainer\n        setShowNav={setShowNav}\n        selectedId={selectedId}\n        setSelectedId={setSelectedId}\n        notes={notes}\n        setNotes={setNotes}\n        selectNote={selectNote}\n      />\n    </main>\n  );\n};\n\nexport default Content;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}