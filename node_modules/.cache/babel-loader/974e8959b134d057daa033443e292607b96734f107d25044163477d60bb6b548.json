{"ast":null,"code":"var _jsxFileName = \"/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/components/NoteContainer/NoteContainer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteContainer = ({\n  setShowNav,\n  selectedNote,\n  setSelectedNote\n}) => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const selectNote = noteId => {\n    console.log(noteId);\n    setShowNav(prevState => !prevState);\n    // setSelectedNote(notes[noteId]);\n    const newClassName = \"gridSquare selectedNote\";\n    const foundNote = notes.find(note => {\n      return note.id === noteId;\n    });\n    // const newNoteToSet = { class: newClassName, ...foundNote };\n    // const filteredArray = notes.filter(note => {\n    //   return notes.id !== noteId;\n    // });\n    // console.log(newNoteToSet);\n    // console.log(filteredArray);\n    // setNotes([newNoteToSet, ...filteredArray]);\n  };\n  console.log(\"selected note\", selectedNote);\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: \"sample\",\n    subtitle: \"sample also\",\n    class: \"gridSquare unselectedNote\"\n  }, {\n    id: 2,\n    title: \"sample2\",\n    subtitle: \"sample2 also\",\n    class: \"gridSquare unselectedNote\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"noteContainer\",\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      // className={note.class}\n      className: isSelected ? \"gridSquare selected\" : \"gridSquare unselected\",\n      id: `q${note.id}`,\n      onClick: () => {\n        selectNote(note.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `title${note.id}`,\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteContainer, \"VJfsGZtICXoalZBYo95Btqu8xRw=\");\n_c = NoteContainer;\nexport default NoteContainer;\nvar _c;\n$RefreshReg$(_c, \"NoteContainer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NoteContainer","setShowNav","selectedNote","setSelectedNote","_s","isSelected","setIsSelected","selectNote","noteId","console","log","prevState","newClassName","foundNote","notes","find","note","id","setNotes","title","subtitle","class","children","map","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/components/NoteContainer/NoteContainer.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst NoteContainer = ({ setShowNav, selectedNote, setSelectedNote }) => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const selectNote = (noteId) => {\r\n    console.log(noteId);\r\n    setShowNav((prevState) => !prevState);\r\n    // setSelectedNote(notes[noteId]);\r\n    const newClassName = \"gridSquare selectedNote\";\r\n    const foundNote = notes.find(note => {\r\n      return note.id === noteId;\r\n    });\r\n    // const newNoteToSet = { class: newClassName, ...foundNote };\r\n    // const filteredArray = notes.filter(note => {\r\n    //   return notes.id !== noteId;\r\n    // });\r\n    // console.log(newNoteToSet);\r\n    // console.log(filteredArray);\r\n    // setNotes([newNoteToSet, ...filteredArray]);\r\n  };\r\n\r\n  console.log(\"selected note\", selectedNote);\r\n  const [notes, setNotes] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"sample\",\r\n      subtitle: \"sample also\",\r\n      class: \"gridSquare unselectedNote\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"sample2\",\r\n      subtitle: \"sample2 also\",\r\n      class: \"gridSquare unselectedNote\",\r\n    },\r\n  ]);\r\n  return (\r\n    <div id=\"noteContainer\">\r\n      {notes.map((note) => (\r\n        <div\r\n          // className={note.class}\r\n          className={isSelected ? \"gridSquare selected\" : \"gridSquare unselected\"}\r\n          id={`q${note.id}`}\r\n          key={note.id}\r\n          onClick={() => {\r\n            selectNote(note.id);\r\n          }}\r\n        >\r\n          <div id={`title${note.id}`}>{note.title}</div>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteContainer;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMU,UAAU,GAAIC,MAAM,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBP,UAAU,CAAEU,SAAS,IAAK,CAACA,SAAS,CAAC;IACrC;IACA,MAAMC,YAAY,GAAG,yBAAyB;IAC9C,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAI;MACnC,OAAOA,IAAI,CAACC,EAAE,KAAKT,MAAM;IAC3B,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,YAAY,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEI,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CACjC;IACEoB,EAAE,EAAE,CAAC;IACLE,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,aAAa;IACvBC,KAAK,EAAE;EACT,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLE,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,cAAc;IACxBC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACF,oBACEtB,OAAA;IAAKkB,EAAE,EAAC,eAAe;IAAAK,QAAA,EACpBR,KAAK,CAACS,GAAG,CAAEP,IAAI,iBACdjB,OAAA;MACE;MACAyB,SAAS,EAAEnB,UAAU,GAAG,qBAAqB,GAAG,uBAAwB;MACxEY,EAAE,EAAG,IAAGD,IAAI,CAACC,EAAG,EAAE;MAElBQ,OAAO,EAAEA,CAAA,KAAM;QACblB,UAAU,CAACS,IAAI,CAACC,EAAE,CAAC;MACrB,CAAE;MAAAK,QAAA,eAEFvB,OAAA;QAAKkB,EAAE,EAAG,QAAOD,IAAI,CAACC,EAAG,EAAE;QAAAK,QAAA,EAAEN,IAAI,CAACG;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GALzCb,IAAI,CAACC,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACzB,EAAA,CApDIJ,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}