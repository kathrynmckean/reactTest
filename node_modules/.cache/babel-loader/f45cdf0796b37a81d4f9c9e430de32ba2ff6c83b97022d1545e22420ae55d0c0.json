{"ast":null,"code":"var _jsxFileName = \"/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/Content.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Nav from \"./components/Nav\";\nimport NoteContainer from \"./components/NoteContainer\";\nimport NoteEditor from \"./components/NoteEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nextId = 3;\nconst Content = () => {\n  _s();\n  const [showNav, setShowNav] = useState(false);\n  const [showEditor, setShowEditor] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [selectedNote, setSelctedNote] = useState(null);\n  const [noteInputValue, setNoteInputValue] = useState(null);\n  const handleNewNote = () => {\n    console.log(\"new note\");\n    selectNote(nextId); // highlight the new note\n    setShowEditor(true); // show the editor\n    setNotes([{\n      id: nextId,\n      title: \"New note\",\n      subtitle: \"edit content\",\n      class: \"gridSquare\"\n    }, ...notes]);\n    nextId += 1;\n  };\n  const handleDeleteNote = () => {\n    console.log(selectedId);\n    const newArray = [...notes.slice(0, selectedId - 1), ...notes.slice(selectedId)];\n    setNotes(newArray);\n  };\n  const selectNote = noteId => {\n    // runs when a note is clicked\n    setShowNav(true);\n    setSelectedId(noteId); // highlight the note itself\n    const noteToBeSelected = notes.find(note => note.id === noteId);\n    setSelctedNote(noteToBeSelected);\n  };\n  const [notes, setNotes] = useState([\n  // the array holding note information\n  {\n    id: 1,\n    title: \"sample\",\n    subtitle: \"sample also\",\n    class: \"gridSquare\"\n  }, {\n    id: 2,\n    title: \"sample2\",\n    subtitle: \"sample2 also\",\n    class: \"gridSquare\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      showNav: showNav,\n      setShowNav: setShowNav,\n      showEditor: showEditor,\n      setShowEditor: setShowEditor,\n      selectedId: selectedId,\n      setSelectedId: setSelectedId,\n      notes: notes,\n      setNotes: setNotes,\n      handleNewNote: handleNewNote,\n      handleDeleteNote: handleDeleteNote\n      // selectedNote={selectedNote}\n      // setSelectedNote={setSelectedNote}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteEditor, {\n      showEditor: showEditor,\n      setShowEditor: setShowEditor,\n      selectedNote: selectedNote,\n      noteInputValue: noteInputValue,\n      setNoteInputValue: setNoteInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteContainer, {\n      setShowNav: setShowNav,\n      selectedId: selectedId,\n      setSelectedId: setSelectedId,\n      notes: notes,\n      setNotes: setNotes,\n      selectNote: selectNote\n      // selectedNote={selectedNote}\n      // setSelectedNote={setSelectedNote}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"t3QPi8Z+fCsFShBoTpPdMdhEbNs=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","Nav","NoteContainer","NoteEditor","jsxDEV","_jsxDEV","nextId","Content","_s","showNav","setShowNav","showEditor","setShowEditor","selectedId","setSelectedId","selectedNote","setSelctedNote","noteInputValue","setNoteInputValue","handleNewNote","console","log","selectNote","setNotes","id","title","subtitle","class","notes","handleDeleteNote","newArray","slice","noteId","noteToBeSelected","find","note","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/Content.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Nav from \"./components/Nav\";\nimport NoteContainer from \"./components/NoteContainer\";\nimport NoteEditor from \"./components/NoteEditor\";\n\nlet nextId = 3;\n\nconst Content = () => {\n  const [showNav, setShowNav] = useState(false);\n  const [showEditor, setShowEditor] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [selectedNote, setSelctedNote] = useState(null);\n  const [noteInputValue, setNoteInputValue] = useState(null);\n\n  const handleNewNote = () => {\n    console.log(\"new note\");\n    selectNote(nextId); // highlight the new note\n    setShowEditor(true); // show the editor\n    setNotes([\n      {\n        id: nextId,\n        title: \"New note\",\n        subtitle: \"edit content\",\n        class: \"gridSquare\",\n      },\n      ...notes,\n    ]);\n    nextId += 1;\n  };\n\n  const handleDeleteNote = () => {\n    console.log(selectedId);\n    const newArray = [\n      ...notes.slice(0, selectedId - 1),\n      ...notes.slice(selectedId)\n    ];\n    setNotes(newArray)\n  };\n\n  const selectNote = (noteId) => {\n    // runs when a note is clicked\n    setShowNav(true);\n    setSelectedId(noteId); // highlight the note itself\n    const noteToBeSelected = notes.find(note => note.id === noteId);\n    setSelctedNote(noteToBeSelected);\n  };\n\n\n\n  const [notes, setNotes] = useState([\n    // the array holding note information\n    {\n      id: 1,\n      title: \"sample\",\n      subtitle: \"sample also\",\n      class: \"gridSquare\",\n    },\n    {\n      id: 2,\n      title: \"sample2\",\n      subtitle: \"sample2 also\",\n      class: \"gridSquare\",\n    },\n  ]);\n\n  return (\n    <main>\n      <Nav\n        showNav={showNav}\n        setShowNav={setShowNav}\n        showEditor={showEditor}\n        setShowEditor={setShowEditor}\n        selectedId={selectedId}\n        setSelectedId={setSelectedId}\n        notes={notes}\n        setNotes={setNotes}\n        handleNewNote={handleNewNote}\n        handleDeleteNote={handleDeleteNote}\n        // selectedNote={selectedNote}\n        // setSelectedNote={setSelectedNote}\n      />\n      <NoteEditor showEditor={showEditor} \n      setShowEditor={setShowEditor}  \n      selectedNote={selectedNote} \n      noteInputValue={noteInputValue}\n      setNoteInputValue={setNoteInputValue}\n       />\n      <NoteContainer\n        setShowNav={setShowNav}\n        selectedId={selectedId}\n        setSelectedId={setSelectedId}\n        notes={notes}\n        setNotes={setNotes}\n        selectNote={selectNote}\n        // selectedNote={selectedNote}\n        // setSelectedNote={setSelectedNote}\n      />\n    </main>\n  );\n};\n\nexport default Content;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,IAAIC,MAAM,GAAG,CAAC;AAEd,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,YAAY,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACrD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBC,UAAU,CAAChB,MAAM,CAAC,CAAC,CAAC;IACpBM,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBW,QAAQ,CAAC,CACP;MACEC,EAAE,EAAElB,MAAM;MACVmB,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,cAAc;MACxBC,KAAK,EAAE;IACT,CAAC,EACD,GAAGC,KAAK,CACT,CAAC;IACFtB,MAAM,IAAI,CAAC;EACb,CAAC;EAED,MAAMuB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;IACvB,MAAMiB,QAAQ,GAAG,CACf,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAElB,UAAU,GAAG,CAAC,CAAC,EACjC,GAAGe,KAAK,CAACG,KAAK,CAAClB,UAAU,CAAC,CAC3B;IACDU,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMR,UAAU,GAAIU,MAAM,IAAK;IAC7B;IACAtB,UAAU,CAAC,IAAI,CAAC;IAChBI,aAAa,CAACkB,MAAM,CAAC,CAAC,CAAC;IACvB,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKQ,MAAM,CAAC;IAC/DhB,cAAc,CAACiB,gBAAgB,CAAC;EAClC,CAAC;EAID,MAAM,CAACL,KAAK,EAAEL,QAAQ,CAAC,GAAGvB,QAAQ,CAAC;EACjC;EACA;IACEwB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE,aAAa;IACvBC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,cAAc;IACxBC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EAEF,oBACEtB,OAAA;IAAA+B,QAAA,gBACE/B,OAAA,CAACJ,GAAG;MACFQ,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBC,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7Bc,KAAK,EAAEA,KAAM;MACbL,QAAQ,EAAEA,QAAS;MACnBJ,aAAa,EAAEA,aAAc;MAC7BU,gBAAgB,EAAEA;MAClB;MACA;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACFnC,OAAA,CAACF,UAAU;MAACQ,UAAU,EAAEA,UAAW;MACnCC,aAAa,EAAEA,aAAc;MAC7BG,YAAY,EAAEA,YAAa;MAC3BE,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA;IAAkB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACHnC,OAAA,CAACH,aAAa;MACZQ,UAAU,EAAEA,UAAW;MACvBG,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7Bc,KAAK,EAAEA,KAAM;MACbL,QAAQ,EAAEA,QAAS;MACnBD,UAAU,EAAEA;MACZ;MACA;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAChC,EAAA,CA5FID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA8Fb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}