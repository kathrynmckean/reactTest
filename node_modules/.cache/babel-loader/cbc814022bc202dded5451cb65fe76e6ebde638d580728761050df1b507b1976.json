{"ast":null,"code":"import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Nav=_ref=>{let{showNav,setShowNav,showEditor,setShowEditor,selectedId,setSelectedId,notes,setNotes,handleNewNote,handleDeleteNote}=_ref;const editNote=()=>{// show noteEditor\nsetShowEditor(prevState=>!prevState);};const backToNotes=()=>{// clicking the back button\nsetShowNav(prevState=>!prevState);// hide the nav bar\nif(showEditor){// if the editing screen is visible then hide it\nsetShowEditor(prevState=>!prevState);}setSelectedId(null);// stop highlighting the clicked note\n};const handleNewButtonClick=()=>{handleNewNote();if(!showNav){setShowNav(true);}};return/*#__PURE__*/_jsxs(\"nav\",{children:[showNav&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{id:\"backButton\",onClick:backToNotes,children:\"back\"}),/*#__PURE__*/_jsx(\"button\",{id:\"editButton\",onClick:editNote,children:\"edit\"}),/*#__PURE__*/_jsx(\"button\",{id:\"deleteButton\",onClick:handleDeleteNote,children:\"delete\"})]}),/*#__PURE__*/_jsx(\"button\",{id:\"newButton\",onClick:handleNewButtonClick,children:\"+\"})]});};export default Nav;","map":{"version":3,"names":["Nav","_ref","showNav","setShowNav","showEditor","setShowEditor","selectedId","setSelectedId","notes","setNotes","handleNewNote","handleDeleteNote","editNote","prevState","backToNotes","handleNewButtonClick","_jsxs","children","_Fragment","_jsx","id","onClick"],"sources":["/Users/kathryn/Desktop/projects/reactTest/my-react-app/src/Content/components/Nav/Nav.js"],"sourcesContent":["const Nav = ({\r\n  showNav,\r\n  setShowNav,\r\n  showEditor,\r\n  setShowEditor,\r\n  selectedId,\r\n  setSelectedId,\r\n  notes,\r\n  setNotes,\r\n  handleNewNote,\r\n  handleDeleteNote,\r\n}) => {\r\n  const editNote = () => {\r\n    // show noteEditor\r\n    setShowEditor((prevState) => !prevState);\r\n  };\r\n\r\n  const backToNotes = () => {\r\n    // clicking the back button\r\n    setShowNav((prevState) => !prevState); // hide the nav bar\r\n    if (showEditor) {\r\n      // if the editing screen is visible then hide it\r\n      setShowEditor((prevState) => !prevState);\r\n    }\r\n    setSelectedId(null); // stop highlighting the clicked note\r\n  };\r\n\r\n  const handleNewButtonClick = () => {\r\n    handleNewNote();\r\n    if (!showNav) {\r\n      setShowNav(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      {/* if a note is selected then show the buttons */}\r\n\r\n      {showNav && (\r\n        <>\r\n          <button id=\"backButton\" onClick={backToNotes}>\r\n            back\r\n          </button>\r\n          <button id=\"editButton\" onClick={editNote}>\r\n            edit\r\n          </button>\r\n          <button id=\"deleteButton\" onClick={handleDeleteNote}>\r\n            delete\r\n          </button>\r\n        </>\r\n      )}\r\n      {/* TODO: add something for the onclick here */}\r\n      <button id=\"newButton\" onClick={handleNewButtonClick}>\r\n        +\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n"],"mappings":"+EAAA,KAAM,CAAAA,GAAG,CAAGC,IAAA,EAWN,IAXO,CACXC,OAAO,CACPC,UAAU,CACVC,UAAU,CACVC,aAAa,CACbC,UAAU,CACVC,aAAa,CACbC,KAAK,CACLC,QAAQ,CACRC,aAAa,CACbC,gBACF,CAAC,CAAAV,IAAA,CACC,KAAM,CAAAW,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACAP,aAAa,CAAEQ,SAAS,EAAK,CAACA,SAAS,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB;AACAX,UAAU,CAAEU,SAAS,EAAK,CAACA,SAAS,CAAC,CAAE;AACvC,GAAIT,UAAU,CAAE,CACd;AACAC,aAAa,CAAEQ,SAAS,EAAK,CAACA,SAAS,CAAC,CAC1C,CACAN,aAAa,CAAC,IAAI,CAAC,CAAE;AACvB,CAAC,CAED,KAAM,CAAAQ,oBAAoB,CAAGA,CAAA,GAAM,CACjCL,aAAa,CAAC,CAAC,CACf,GAAI,CAACR,OAAO,CAAE,CACZC,UAAU,CAAC,IAAI,CAAC,CAClB,CACF,CAAC,CAED,mBACEa,KAAA,QAAAC,QAAA,EAGGf,OAAO,eACNc,KAAA,CAAAE,SAAA,EAAAD,QAAA,eACEE,IAAA,WAAQC,EAAE,CAAC,YAAY,CAACC,OAAO,CAAEP,WAAY,CAAAG,QAAA,CAAC,MAE9C,CAAQ,CAAC,cACTE,IAAA,WAAQC,EAAE,CAAC,YAAY,CAACC,OAAO,CAAET,QAAS,CAAAK,QAAA,CAAC,MAE3C,CAAQ,CAAC,cACTE,IAAA,WAAQC,EAAE,CAAC,cAAc,CAACC,OAAO,CAAEV,gBAAiB,CAAAM,QAAA,CAAC,QAErD,CAAQ,CAAC,EACT,CACH,cAEDE,IAAA,WAAQC,EAAE,CAAC,WAAW,CAACC,OAAO,CAAEN,oBAAqB,CAAAE,QAAA,CAAC,GAEtD,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}